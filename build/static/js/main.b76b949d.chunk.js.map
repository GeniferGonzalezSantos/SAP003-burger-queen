{"version":3,"sources":["imagens/logo.png","firebase.js","components/card.js","components/button.js","components/input.js","components/Clientes/Cliente.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","styles","StyleSheet","create","card","margin","padding","height","width","border","borderRadius","borderColor","display","alignItems","justifyContent","fontFamily","fontSize","Card","props","onClick","className","css","children","btn","backgroundColor","color","Button","name","id","input","Input","type","placeholder","title","TakeOrder","useState","dados","setDados","item","setItem","table","setTable","cliente","setCliente","order","setOrder","counter","setCounter","status","modal","setModal","options","setOptions","extras","setExtras","useEffect","collection","get","then","snapshot","getMenu","docs","map","doc","data","filterMenu","event","showMenu","target","filterItens","filter","itensMenu","breakfast","showOrder","includes","count","price","key","verifyOptions","element","index","value","upDateModal","selectOptions","onChange","e","preventDefault","delPrice","itemIndex","indexOf","splice","deleteItem","add","clientName","time","FieldValue","serverTimestamp","console","log","nav","ul","flexDirection","li","listStyleType","a","textDecoration","fontWeight","marginInlineEnd","logo","reset","App","src","alt","to","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b76b949d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.da36972b.png\";","import firebase from 'firebase';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCZ3TKwbopvoC84_7X6CQSyXhS6529Lo6g\",\n    authDomain: \"burguer-queen-8ec3a.firebaseapp.com\",\n    databaseURL: \"https://burguer-queen-8ec3a.firebaseio.com\",\n    projectId: \"burguer-queen-8ec3a\",\n    storageBucket: \"burguer-queen-8ec3a.appspot.com\",\n    messagingSenderId: \"914676994781\",\n    appId: \"1:914676994781:web:3aa341b1f3f95c368b4134\"\n  };\n  \nexport const firebaseImp = firebase.initializeApp(firebaseConfig);\nexport const db = firebase.firestore();","import React from 'react';\nimport { StyleSheet, css } from 'aphrodite'\n\nconst Card = (props) => (\n    <>\n        <section\n            onClick={props.onClick}\n            className={css(styles.card)}\n        >{props.children}</section>\n    </>\n)\n\nconst styles = StyleSheet.create({\n    card: {\n        margin: '2%',\n        padding: '7%',\n        height: '15%',\n        width: '20%',\n        border: 'solid',\n        borderRadius: '5px',\n        borderColor: '#00B383',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        fontFamily: 'Ubuntu, sans-serif',\n        fontSize: '1em',\n\n\n    },\n});\n\nexport default Card;","import React from 'react';\nimport { StyleSheet, css } from 'aphrodite';\n\nconst Button = (props) => (\n    <button onClick={props.onClick} className={css(styles.btn, props.name)} id={props.id}>{props.children}</button>\n)\n\nconst styles = StyleSheet.create({\n    btn: {\n        margin: '1% 1% 1% 7%',\n        padding: '5px',\n        border: '1px solid',\n        borderRadius: '5px',\n        borderColor: '#00B383',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        fontSize: '1em',\n        backgroundColor: '#00B383',\n        color: '#c5350d',\n    },\n\n\n});\n\nexport default Button;","import React from 'react';\nimport { StyleSheet, css } from 'aphrodite';\n\n\nconst Input = (props) => (\n   <>\n      <input\n         type={props.type}\n         onClick={props.onClick}\n         className={css(styles.input)}\n         name={props.name}\n         placeholder={props.placeholder}\n         title={props.title} />\n   </>\n)\n\nconst styles = StyleSheet.create({\n\n   input: {\n      margin: '2%',\n      padding: '5px',\n      border: 'none',\n      borderRadius: '10px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n\n   },\n\n});\n\nexport default Input;","import React, { useState, useEffect } from 'react';\nimport { db } from '../../firebase.js';\nimport firebase from 'firebase/app';\nimport Card from '../card';\nimport Button from '../button';\nimport Input from '../input';\nimport './Cliente.css';\n\n\nfunction TakeOrder() {\n  const [dados, setDados] = useState([]);\n  const [item, setItem] = useState([]);\n  const [table, setTable] = useState('');\n  const [cliente, setCliente] = useState('');\n  const [order, setOrder] = useState([]);\n  const [counter, setCounter] = useState(0);\n  const [modal, setModal] = useState({ status: false });\n  const [options, setOptions] = useState('');\n  const [extras, setExtras] = useState('');\n\n  useEffect(() => {\n    db.collection('Menu')\n      .get()\n      .then((snapshot) => {\n        const getMenu = snapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data()\n        }))\n        setDados(getMenu)\n      });\n  }, [0])\n\n  const filterMenu = (event) => {\n    const idItem = event.target.id;\n    const showMenu = (idItem === 'breakfast') ? true : false;\n    const filterItens = dados.filter((itensMenu) => itensMenu.breakfast === showMenu)\n    return setItem(filterItens)\n  }\n\n\n  const showOrder = (item) => {\n    if (order.includes(item)) {\n      item.count++;\n      setCounter(+(counter + item.price * item.count));\n    } else {\n      item.count = 1;\n      setOrder([...order, item]);\n    }\n    setCounter(+(counter + item.price));\n  }\n\n  const deleteItem = (item) => {\n    if (item.count === 1) {\n      const delPrice = counter - item.price;\n      const itemIndex = order.indexOf(item);\n      order.splice(itemIndex, 1);\n      setOrder([...order]);\n      setCounter(delPrice);\n    } else {\n      item.count--;\n      const delPrice = counter - item.price;\n      setCounter(delPrice);\n    }\n  }\n\n  const sendOrder = () => {\n    db.collection('Pedidos')\n      .add({\n        clientName: cliente,\n        table: table,\n        order: order,\n        status: 'Pendente',\n        time: firebase.firestore.FieldValue.serverTimestamp()\n      })\n      .then(() => {\n        setOrder([]);\n        setTable(['']);\n        setCliente(['']);\n        setCounter(0);\n      })\n    console.log('Enviado')\n  }\n\n  const selectOptions = () => {\n    if (extras !== '') {\n      const upDateModal = {\n        ...modal.item,\n        price: modal.item.price + 1,\n        name: `${modal.item.name} ${options}`\n      }\n      showOrder(upDateModal);\n      setModal({ status: false });\n    } else {\n      const upDateModal = {\n        ...modal.item,\n        name: `${modal.item.name} ${options}`\n      }\n      showOrder(upDateModal);\n      setModal({ status: false });\n    }\n  }\n\n  const verifyOptions = (item) => {\n    if (item.options) {\n      setModal({ status: true, item: item })\n    } else {\n      showOrder(item);\n    }\n\n  }\n\n  return (\n    <>\n      <main>\n        <div key={'itensMenu'} className='btn'>\n          <Button\n            id='breakfast'\n            onClick={filterMenu}\n            children='Manhã'\n          />\n          <Button\n            id='btn'\n            onClick={filterMenu}\n            children='Tarde'\n          />\n        </div>\n      </main>\n      <article className='article' >\n        <div key={dados.id} className='card-container'>\n          {item.map((item) =>\n            <Card\n              key={item.id}\n              onClick={() => verifyOptions(item)}\n            >\n              <div className='card'>\n                {item.name}\n              </div>\n              <div className='card'>\n                R${item.price}\n              </div>\n            </Card>\n          )}\n        </div>\n        {modal.status ? (\n          <section className='s-options'>\n            <div>\n              <h3>Opções</h3>\n              {modal.item.options.map((element, index) =>\n                <div key={index}>\n                  <Input type='radio' name='options' value={element} onClick={() => setOptions(element)} />\n                  <label>{element}</label>\n                </div>\n              )}\n            </div>\n            <div>\n              <h3>Extras</h3>\n              {modal.item.extras.map((element, index) =>\n                <div key={index}>\n                  <Input type='radio' name='extras' value={element} onClick={() => setExtras(element)} />\n                  <label>{element}</label>\n                </div>\n              )}\n              <Button onClick={() => selectOptions()}>Selecionar</Button>\n            </div>\n          </section>\n        ) : false}\n      </article>\n      <aside className='aside'>\n        <form className='container-aside'>\n          <div className='input'>\n            <Input\n              placeholder='Cliente'\n              onChange={(event) =>\n                setCliente(event.target.value)} />\n            <Input\n              placeholder='Mesa'\n              onChange={(event) =>\n                setTable(event.target.value)} />\n          </div>\n          <div className='map' >\n            {order.map(item => <p key={item.id}>\n              {item.count} x {item.name}\n              R$ {item.price}\n              <button className='btn-map' onClick={(e) => (e.preventDefault(), deleteItem(item))} children={'X'} />\n            </p>\n            )}\n          </div>\n          <div className='div-enviar'>\n            <p> Total: R$  {counter}  </p>\n            <Button\n              type='button' children='Enviar' onClick={(e) => (e.preventDefault(), sendOrder())}\n            />\n          </div>\n        </form>\n      </aside>\n    </>\n  )\n}\n\n\nexport default TakeOrder;","import React from 'react';\nimport TakeOrder from './components/Clientes/Cliente'\nimport { StyleSheet, css } from 'aphrodite';\nimport { reset } from 'aphrodite';\nimport logo from './imagens/logo.png';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <nav className={css(styles.nav)}>\n          <img src={logo} alt='Logo Burguer Queen' className={css(styles.logo)} />\n          <ul className={css(styles.ul)}>\n            <li className={css(styles.li)}>\n              <Link to=\"/\" className={css(styles.a)}>Cliente</Link>\n            </li>\n            <li className={css(styles.li)}>\n              <Link to=\"/cozinha\" className={css(styles.a)}>Cozinha</Link>\n            </li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route path=\"/cozinha\">\n          <div>'Opa, em breve haverá novidades!'</div>\n          </Route>\n          <Route path=\"/\">\n            <TakeOrder/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n\n  )\n}\n\nconst styles = StyleSheet.create({\n  nav: {\n    width: '100%',\n    backgroundColor: '#c5350d',\n    height: '8vw',\n    display: 'flex',\n    justifyContent: 'flex-end',\n   \n  },\n\n  ul: {\n    margin: '0',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent:'flex-end',\n    alignItems:'flex-end',\n    fontFamily: 'Ubuntu, sans-serif',\n  },\n\n  li: {\n    listStyleType: 'none',\n    margin: '0',\n\n  },\n\n  a: {\n    color: '#00B383',\n    textDecoration: 'none',\n    fontSize: '2em',\n    fontWeight: 'bold',\n    marginInlineEnd: '20px', \n \n  },\n\n  logo: {\n    display:'flex',\n    alignItems:'center',\n    justifyContent:'center',\n    width: '100px',\n    height: '100px',\n    margin:'1%',\n    borderRadius: '50%',\n  }\n\n});\n\nreset();\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}